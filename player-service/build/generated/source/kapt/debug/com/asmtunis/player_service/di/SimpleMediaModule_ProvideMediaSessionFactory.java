// Generated by Dagger (https://dagger.dev).
package com.asmtunis.player_service.di;

import android.content.Context;
import androidx.media3.exoplayer.ExoPlayer;
import androidx.media3.session.MediaSession;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata("dagger.hilt.android.qualifiers.ApplicationContext")
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class SimpleMediaModule_ProvideMediaSessionFactory implements Factory<MediaSession> {
  private final SimpleMediaModule module;

  private final Provider<Context> contextProvider;

  private final Provider<ExoPlayer> playerProvider;

  public SimpleMediaModule_ProvideMediaSessionFactory(SimpleMediaModule module,
      Provider<Context> contextProvider, Provider<ExoPlayer> playerProvider) {
    this.module = module;
    this.contextProvider = contextProvider;
    this.playerProvider = playerProvider;
  }

  @Override
  public MediaSession get() {
    return provideMediaSession(module, contextProvider.get(), playerProvider.get());
  }

  public static SimpleMediaModule_ProvideMediaSessionFactory create(SimpleMediaModule module,
      Provider<Context> contextProvider, Provider<ExoPlayer> playerProvider) {
    return new SimpleMediaModule_ProvideMediaSessionFactory(module, contextProvider, playerProvider);
  }

  public static MediaSession provideMediaSession(SimpleMediaModule instance, Context context,
      ExoPlayer player) {
    return Preconditions.checkNotNullFromProvides(instance.provideMediaSession(context, player));
  }
}
